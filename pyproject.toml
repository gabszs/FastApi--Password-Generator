[tool.poetry]
name = "passwordgenerator"
version = "0.1.3"
description = "This package provides a simple and efficient solution for generating random passwords with options for uppercase letters, lowercase letters, and optional accents. The package includes a user-friendly API, robust algorithms for generating secure passwords, and features to verify password strength. Overall, this package is a useful and versatile tool for ensuring password security in applications and systems."
authors = ["GabrielCarvalho <gabrielcarvalho.workk@gmail.com>"]
license = "Open source license"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.95.1"
uvicorn = "^0.22.0"
requests = "^2.29.0"
aiohttp = "^3.8.4"
pydantic = "^1.10.7"
asyncio = "^3.4.3"
httpx = "^0.24.0"
pytest-asyncio = "^0.21.0"
email-validator = "^2.0.0.post2"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.13.0"
ruff = "^0.5.7"
pytest-cov = "^5.0.0"
pytest = "^8.3.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
run = 'uvicorn app.main:app --reload'
lint = 'ruff check .'  # Update this line
pre_test = 'task lint'
test = 'pytest -s -x --capture=no --cov=app -vv'
verbose_test = 'pytest --verbose --show-capture=all --exitfirst --cov=app --cov-report=term-missing -vv'
commit_hook = "pre-commit run --all-files"
post_verbose_test = 'coverage html'
post_test = 'coverage html'

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = ["E701"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
