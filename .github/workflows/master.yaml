name: Production-Pipeline-SWR-CCI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  CLOUD_REGION: sa-brazil-1
  SWR_ORGANIZATION: devopsbrdev
  IMAGE_NAME: password-generator
  IMAGE_TAG:  
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Cloning the Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11.1"

      - name: Install Poetry
        run: pipx install poetry

      - name: Install Dependencies
        run: poetry install

      - name: Run tests
        run: poetry run task test
        
  push-to-swr-and-dockerhub:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set New Image Tag
        id: set-new-tag
        run: |
          NEW_IMAGE_TAG="v$(date +%Y%m%d%H%M%S)"
          echo "NEW_IMAGE_TAG=${NEW_IMAGE_TAG}" >> $GITHUB_ENV
          echo "::set-output name=new_tag::${NEW_IMAGE_TAG}"

      - name: Huawei Cloud Software Repository for Container (SWR) Login
        uses: huaweicloud/swr-login@v2.1.0
        with:
          access-key-id: ${{ secrets.ACCESS_KEY }}
          access-key-secret: ${{ secrets.SECRET_ACCESS_KEY }}
          region: ${{ env.CLOUD_REGION }}

      - name: Build Docker Image
        id: build-image
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          docker build -t $IMAGE_NAME .

      - name: Tag Docker Image
        env:
          SWR_TAG_LTS: swr.${{ env.CLOUD_REGION }}.myhuaweicloud.com/${{ env.SWR_ORGANIZATION }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          SWR_TAG_NEW: swr.${{ env.CLOUD_REGION }}.myhuaweicloud.com/${{ env.SWR_ORGANIZATION }}/${{ env.IMAGE_NAME }}:${{ steps.set-new-tag.outputs.new_tag }}
        run: |
          docker tag ${{ env.IMAGE_NAME }} $SWR_TAG_LTS
          docker tag ${{ env.IMAGE_NAME }} $SWR_TAG_NEW

      - name: Push Docker Image to SWR
        env:
          SWR_TAG_LTS: swr.${{ env.CLOUD_REGION }}.myhuaweicloud.com/${{ env.SWR_ORGANIZATION }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          SWR_TAG_NEW: swr.${{ env.CLOUD_REGION }}.myhuaweicloud.com/${{ env.SWR_ORGANIZATION }}/${{ env.IMAGE_NAME }}:${{ steps.set-new-tag.outputs.new_tag }}
        run: |
          # Push both tags (lts and version)
          docker push $SWR_TAG_LTS
          docker push $SWR_TAG_NEW

      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: docker images
        run: docker images

      - name: Tag Docker Image for Docker Hub
        env:
          IMAGE_TAG_LTS: ${{ env.IMAGE_TAG }}
          IMAGE_TAG_NEW: ${{ steps.set-new-tag.outputs.new_tag }}
        run: |
          # Tagging the image for Docker Hub
          docker tag ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG_LTS} ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG_LTS}
          docker tag ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG_NEW} ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG_NEW}

      - name: Tag Docker Image for Docker Hub
        env:
          IMAGE_NAME: "${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}"
          IMAGE_TAG_LTS: ${{ env.IMAGE_TAG }}  # lts
          IMAGE_TAG_NEW: ${{ steps.set-new-tag.outputs.new_tag }}  # tag dinâmica (versão com data)
        run: |
          # Tagueando a imagem local para Docker Hub
          docker tag ${{ env.IMAGE_NAME }}:latest $IMAGE_NAME:${IMAGE_TAG_LTS}  # Tagueando como 'lts'
          docker tag ${{ env.IMAGE_NAME }}:latest $IMAGE_NAME:${IMAGE_TAG_NEW}


  Update-Image-Tag-in-Deployment:
    runs-on: ubuntu-latest
    needs: [build-and-test, push-to-swr-and-dockerhub] 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3 
        with:
          token: ${{ secrets.MODIFY_TOKEN }}
          fetch-depth: 0

      - name: Set New Image Tag
        run: |
          NEW_IMAGE_TAG="${{ needs.push-to-swr-and-dockerhub.outputs.new_tag }}"
          echo "Using NEW_IMAGE_TAG=${NEW_IMAGE_TAG}"

      - name: Checkout GitOps Branch
        run: |
          git fetch origin
          git checkout gitops

      - name: Update Image Tag in Deployment
        run: |
          sed -i "s|image: gabzsz/password-generator:.*|image: gabzsz/password-generator:${NEW_IMAGE_TAG}|" k8s/deployment.yaml

      - name: Git Config
        run: |
          git config --global user.email "ci-bot@ci.com"
          git config --global user.name "CI Bot"

      - name: Commit and Push Changes
        run: |
          git add k8s/deployment.yaml
          git commit -m "Updating the image tag: ${NEW_IMAGE_TAG}"
          git push origin gitops
